@model IEnumerable<OnlineMusicStore.Models.MusicItem>
@{
    ViewBag.Title = "Music Inventory";
}

<div class="retro-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="page-title mb-0">
            <i class="fas fa-compact-disc me-2 text-primary"></i>
            Music Inventory
        </h2>
        <a href="@Url.Action("CreateMusic", "Admin")" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i> Add New Music Item
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            No music items found in the inventory. Click "Add New Music Item" to start adding products.
        </div>
    }
    else
    {
        <div class="mb-3">
            <div class="input-group">
                <span class="input-group-text" id="search-addon"><i class="fas fa-search"></i></span>
                <input type="text" class="form-control" id="inventorySearch" placeholder="Search inventory..." aria-label="Search inventory" aria-describedby="search-addon">
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover" id="inventoryTable">
                <thead class="table-dark">
                    <tr>
                        <th style="width: 50px"></th>
                        <th>Title</th>
                        <th>Artist</th>
                        <th>Genre</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>Status</th>
                        <th>Release Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                {
                                    <img src="@item.ImageUrl" alt="Cover" class="img-thumbnail" style="width: 50px; height: 50px; object-fit: cover;" />
                                }
                                else
                                {
                                    <div class="text-center bg-light rounded" style="width: 50px; height: 50px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-music text-muted"></i>
                                    </div>
                                }
                            </td>
                            <td class="fw-bold">@item.Title</td>
                            <td>@item.Artist</td>
                            <td>@item.Genre</td>
                            <td class="fw-bold">₹@item.Price.ToString("0.00")</td>
                            <td>@item.Stock</td>
                            <td>
                                @if (item.Stock > 10)
                                {
                                    <span class="badge bg-success">In Stock</span>
                                }
                                else if (item.Stock > 0)
                                {
                                    <span class="badge bg-warning text-dark">Low Stock</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Out of Stock</span>
                                }
                            </td>
                            <td>
                                @(item.ReleaseDate != null && item.ReleaseDate != DateTime.MinValue ?
                                 item.ReleaseDate.ToString("MMM d, yyyy") : "-")
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a href="@Url.Action("EditMusic", new { id = item.MusicItemId })" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Action("DeleteMusic", new { id = item.MusicItemId })" class="btn btn-sm btn-outline-danger"
                                       onclick="return confirm('Are you sure you want to delete \'@item.Title\' by @item.Artist?');">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-3">
            <div>
                <span class="badge bg-secondary">Total Items: @Model.Count()</span>
            </div>
            <div>
                <span class="badge bg-success me-2">In Stock: @Model.Count(x => x.Stock > 10)</span>
                <span class="badge bg-warning text-dark me-2">Low Stock: @Model.Count(x => x.Stock > 0 && x.Stock <= 10)</span>
                <span class="badge bg-danger">Out of Stock: @Model.Count(x => x.Stock <= 0)</span>
            </div>
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Simple search functionality for the inventory table
        const searchInput = document.getElementById('inventorySearch');
        if (searchInput) {
            searchInput.addEventListener('keyup', function() {
                const searchTerm = this.value.toLowerCase();
                const table = document.getElementById('inventoryTable');
                const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

                for (let i = 0; i < rows.length; i++) {
                    const titleCell = rows[i].getElementsByTagName('td')[1];
                    const artistCell = rows[i].getElementsByTagName('td')[2];
                    const genreCell = rows[i].getElementsByTagName('td')[3];

                    if (titleCell && artistCell && genreCell) {
                        const titleText = titleCell.textContent || titleCell.innerText;
                        const artistText = artistCell.textContent || artistCell.innerText;
                        const genreText = genreCell.textContent || genreCell.innerText;

                        if (titleText.toLowerCase().indexOf(searchTerm) > -1 ||
                            artistText.toLowerCase().indexOf(searchTerm) > -1 ||
                            genreText.toLowerCase().indexOf(searchTerm) > -1) {
                            rows[i].style.display = "";
                        } else {
                            rows[i].style.display = "none";
                        }
                    }
                }
            });
        }
    });
</script>