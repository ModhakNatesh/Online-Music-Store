@model IEnumerable<OnlineMusicStore.Models.MusicItem>
@{
    ViewBag.Title = "Music Catalog";
}

<div class="animate-fade-in">
    <div class="retro-container mb-4">
        <div class="row align-items-center">
            <div class="col-md-12">
                <h2 class="page-title">
                    <i class="fas fa-compact-disc vinyl-animation me-2"></i> Music Catalog
                </h2>
                <p class="lead">Explore our collection of incredible music from various artists and genres</p>
            </div>
        </div>
    </div>

    @if (TempData["Toast"] != null)
    {
        <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
            <div id="cartToast" class="toast align-items-center border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-check-circle me-2"></i> @TempData["Toast"]
                    </div>
                    <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
        <script>
            window.onload = function () {
                var toastEl = document.getElementById('cartToast');
                var toast = new bootstrap.Toast(toastEl);
                toast.show();

                // Auto hide after 3 seconds
                setTimeout(function () {
                    toast.hide();
                }, 3000);
            }
        </script>
    }

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-6 col-lg-3 mb-4">
                <div class="product-card">
                    @if ((DateTime.Now - item.ReleaseDate).TotalDays <= 30)
                    {
                        <span class="product-badge">NEW</span>
                    }

                    <img src="@(item.ImageUrl ?? "/Content/Images/album-placeholder.jpg")" class="card-img-top" alt="@item.Title">

                    <div class="card-body">
                        <h5 class="card-title">@item.Title</h5>
                        <p class="card-text">by @item.Artist</p>
                        <p class="mb-2"><span class="badge" style="background-color: var(--retro-purple);">@item.Genre</span></p>

                        <div class="d-flex align-items-center mb-3">
                            @{
                                var rating = item.Ratings.Any() ? item.Ratings.Average(r => r.Stars) : 0;
                            }
                            <div class="rating me-2">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= rating)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star"></i>
                                    }
                                }
                            </div>
                            <small class="text-muted">(@item.Ratings.Count)</small>
                        </div>

                        <span class="product-price">₹@item.Price.ToString("0.00")</span>

                        <div class="stock-status mb-3">
                            @if (item.Stock > 0)
                            {
                                <span class="badge bg-success"><i class="fas fa-check me-1"></i> In Stock</span>
                            }
                            else
                            {
                                <span class="badge bg-danger"><i class="fas fa-times me-1"></i> Out of Stock</span>
                            }
                        </div>

                        <div class="d-grid gap-2">
                            @if (item.Stock > 0)
                            {
                                <a href="@Url.Action("AddToCart", "Music", new { id = item.MusicItemId })" class="btn btn-primary">
                                    <i class="fas fa-shopping-cart me-1"></i> Add to Cart
                                </a>
                            }
                            else
                            {
                                <button class="btn btn-secondary" disabled>
                                    <i class="fas fa-times me-1"></i> Out of Stock
                                </button>
                            }
                            <a href="@Url.Action("Add", "WishList", new { id = item.MusicItemId })" class="btn btn-outline-primary">
                                <i class="fas fa-heart me-1"></i> Add to Wishlist
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .stock-status {
        text-align: center;
    }

        .stock-status .badge {
            padding: 8px 12px;
            border-radius: 6px;
            font-weight: 600;
        }

    .toast {
        background: linear-gradient(135deg, var(--secondary), var(--retro-blue));
        border: 2px solid var(--dark);
        box-shadow: 5px 5px 0px var(--dark);
        color: var(--dark);
        font-family: 'Space Grotesk', sans-serif;
        font-weight: 600;
        border-radius: 8px;
        padding: 16px 20px;
    }
</style>